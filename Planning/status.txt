
4/13
    just added the post and put routes for the Records collection.

    I am using a const {} to add the data to the collection because there is no front end.

    The _id's are hard coded in right now so it must be changed to perform the update (put) request.

    ------------------------------------------------

4/15

    Rewired:
        removed the records collection (it would be too big with state and tags)
        replace with a collection for each state ( just nc and sc for now)
        each state collection containg vehicle tags

    Working;
        * Adding new tag to the state collection
        * Adding an encounter _id to a state collection ( offier notes related to a specific tag)
        * Search by state/tag: focuses the tag search on the specified state collection

        * Added a route to search all tag collections.
            This uses a forEach() so it is better to use this only after a state/tag search returns []

        * Added validation for state entered for a tag search

    In process: 
        * Validation for tag entered for a search
            - function to remove - works
            - need to continue with validation in file validateSearch.js 
-----------------------------------------------------------------
 4/16

    * Need to make all incoming search data lowercase. (Done)

    * Need to validate new tag input data. (Done)

    * Need to validate new Encounter data. (Done)

    * Need route to delete user (Done)

----------------------------------------------------------

4/17
    * Set up login page in React

    * working on the set user info route. need to get the header to include the bearer token. 

4/22
    * Send back errors {} with username, password error message to client. (done)

    * need validation to disable the submit button on landing page (done)

    * So, im getting back a token even if the login data doesnt match.... (Fixed, added if statement)

    * May change the home(logged in page) to /search instead of /home 
    


    

Client Side
    TODO:
        * If the state/tag search is empty
            - error to user: is the correct state entered?
                * Retry search with new state data
     

  














